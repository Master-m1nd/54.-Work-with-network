{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class UsersService {\n  constructor() {\n    this.groupName = 'Healthy lifestyle';\n    this.users = [{\n      name: \"Mike\",\n      status: \"I'm learning angular\",\n      url: \"https://i.pravatar.cc/150?img=12\",\n      id: 1\n    }, {\n      name: \"Nikola\",\n      status: \"Playing piano\",\n      url: \"https://i.pravatar.cc/150?img=7\",\n      id: 2\n    }, {\n      name: \"Bob\",\n      status: \"Translations from Chinese\",\n      url: \"https://i.pravatar.cc/150?img=11\",\n      id: 3\n    }, {\n      name: \"Anna \",\n      status: \"Pretty girl\",\n      url: \"https://i.pravatar.cc/150?img=1\",\n      id: 4\n    }];\n  }\n  getGroupName() {\n    return this.groupName;\n  }\n  updateGroupName(newGroupName) {\n    this.groupName = newGroupName;\n  }\n  getUsers() {\n    return this.users;\n  }\n  showPopUp() {\n    this.componentRef = this.viewRef.createComponent(PopUpComponent);\n    this.componentRef.instance.members = this.usersService.users.length;\n    this.componentRef.instance.name = this.usersService.getGroupName();\n    this.componentRef.instance.close.subscribe(() => {\n      this.viewRef.clear();\n    });\n  }\n}\nUsersService.ɵfac = function UsersService_Factory(t) {\n  return new (t || UsersService)();\n};\nUsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsersService,\n  factory: UsersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,YAAY;EAEvBC;IADQ,cAAS,GAAW,mBAAmB;IAW/C,UAAK,GAAG,CACN;MAACC,IAAI,EAAE,MAAM;MAAEC,MAAM,EAAE,sBAAsB;MAAEC,GAAG,EAAE,kCAAkC;MAAEC,EAAE,EAAC;IAAC,CAAE,EAC9F;MAACH,IAAI,EAAE,QAAQ;MAAEC,MAAM,EAAE,eAAe;MAAEC,GAAG,EAAE,iCAAiC;MAAEC,EAAE,EAAC;IAAC,CAAE,EACxF;MAACH,IAAI,EAAE,KAAK;MAAEC,MAAM,EAAE,2BAA2B;MAAEC,GAAG,EAAE,kCAAkC;MAAEC,EAAE,EAAC;IAAC,CAAE,EAClG;MAACH,IAAI,EAAE,OAAO;MAAEC,MAAM,EAAE,aAAa;MAAEC,GAAG,EAAE,iCAAiC;MAAEC,EAAE,EAAC;IAAC,CAAE,CACxF;EAfiB;EAEhBC,YAAY;IACV,OAAO,IAAI,CAACC,SAAS;EACvB;EAEAC,eAAe,CAACC,YAAoB;IAClC,IAAI,CAACF,SAAS,GAAGE,YAAY;EAC/B;EASFC,QAAQ;IACN,OAAO,IAAI,CAACC,KAAK;EACnB;EAMAC,SAAS;IACT,IAAI,CAACC,YAAY,GAAG,IAAI,CAACC,OAAO,CAACC,eAAe,CAACC,cAAc,CAAC;IAChE,IAAI,CAACH,YAAY,CAACI,QAAQ,CAACC,OAAO,GAAG,IAAI,CAACC,YAAY,CAACR,KAAK,CAACS,MAAM;IACnE,IAAI,CAACP,YAAY,CAACI,QAAQ,CAACf,IAAI,GAAG,IAAI,CAACiB,YAAY,CAACb,YAAY,EAAE;IAElE,IAAI,CAACO,YAAY,CAACI,QAAQ,CAACI,KAAK,CAACC,SAAS,CAAC,MAAI;MAAC,IAAI,CAACR,OAAO,CAACS,KAAK,EAAE;IAAA,CAAC,CAAC;EACtE;;AAjCavB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAwB,SAAZxB,YAAY;EAAAyB,YAFX;AAAM","names":["UsersService","constructor","name","status","url","id","getGroupName","groupName","updateGroupName","newGroupName","getUsers","users","showPopUp","componentRef","viewRef","createComponent","PopUpComponent","instance","members","usersService","length","close","subscribe","clear","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\lukac\\OneDrive\\Рабочий стол\\ДЗ\\HW 54 Work with network\\src\\app\\service\\users.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ViewChild, ViewContainerRef, ComponentRef } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  private groupName: string = 'Healthy lifestyle';\n  constructor() { }\n\n  getGroupName(): string {\n    return this.groupName;\n  }\n\n  updateGroupName(newGroupName: string): void {\n    this.groupName = newGroupName;\n  }\n\n  users = [\n    {name: \"Mike\", status: \"I'm learning angular\", url: \"https://i.pravatar.cc/150?img=12\", id:1,},\n    {name: \"Nikola\", status: \"Playing piano\", url: \"https://i.pravatar.cc/150?img=7\", id:2,},\n    {name: \"Bob\", status: \"Translations from Chinese\", url: \"https://i.pravatar.cc/150?img=11\", id:3,},\n    {name: \"Anna \", status: \"Pretty girl\", url: \"https://i.pravatar.cc/150?img=1\", id:4,},\n];\n\ngetUsers() {\n  return this.users;\n};\n\n@ViewChild('popUp', { read: ViewContainerRef })\nprivate viewRef!: ViewContainerRef\nprivate componentRef!: ComponentRef<PopUpComponent>\n\nshowPopUp(){\nthis.componentRef = this.viewRef.createComponent(PopUpComponent); \nthis.componentRef.instance.members = this.usersService.users.length;\nthis.componentRef.instance.name = this.usersService.getGroupName();\n\nthis.componentRef.instance.close.subscribe(()=>{this.viewRef.clear()})\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}